prometheus.exporter.snmp "integrations_snmp" {
    target "network_switch_1" {
        address = "<host_address_1>"
        module  = "if_mib"
        auth    = "public_v2"
    }
    target "network_switch_2" {
        address = "<host_address_2>"
        module  = "if_mib"
        auth    = "public_v2"
    }
}
discovery.relabel "integrations_snmp" {
    targets = prometheus.exporter.snmp.integrations_snmp.targets

    rule {
        source_labels = ["job"]
        regex         = "(^.*snmp)\\/(.*)"
        target_label  = "job_snmp"
    }

    rule {
        source_labels = ["job"]
        regex         = "(^.*snmp)\\/(.*)"
        target_label  = "snmp_target"
        replacement   = "$2"
    }            
}

prometheus.relabel "integrations_snmp" {
	forward_to = [prometheus.remote_write.metrics_service.receiver]

	rule {
        source_labels = ["__name__"]
        regex         = "asserts:mixin_workload_job|ifHCInOctets|ifHCOutOctets|ifHighSpeed|ifInErrors|ifMtu|ifOperStatus|ifOutErrors|ifPhysAddress|ifType_info|snmp_scrape_duration_seconds|sysUpTime|up"
        action        = "keep"
    }
}

prometheus.scrape "integrations_snmp" {
    targets    = discovery.relabel.integrations_snmp.output
    forward_to = [prometheus.relabel.integrations_snmp.receiver]
    job_name   = "integrations/snmp"
}
